//
//  ButtonComponents.swift
//  Share Your Journey
//
//  Created by Bartosz Klimek on 20/04/2022.
//

import Foundation
import SwiftUI

//Struct generating button in the entire application.
struct ButtonView: View {
    var buttonTitle: String
    var body: some View {
        HStack{
            Spacer()
            Text(buttonTitle)
                .padding(.vertical, 10)
            Spacer()
        }
        .foregroundColor(Color.white)
    }
}

//Four buttons responsible for pausing, re-starting, finishing and quiting journey are generated by this struct.
struct SymbolButtonView: View {
    var buttonImage: String
    var body: some View {
        HStack{
            Spacer()
            Image(systemName: buttonImage)
                .foregroundColor(.white)
                .padding(.vertical, 11)
            Spacer()
        }
        .foregroundColor(Color.white)
    }
}

//Struct generating standard map type button used to change type of map.
struct StandardMapTypeButton: View {
    var locationManager: CurrentLocationManager
    var body: some View {
        Image(systemName: "location.fill")
            .foregroundColor(Color(UIColor(named:"SystemImageColor") ?? .white))
            .font(.system(size: 30))
    }
}

//Struct generating hybrid map type button used to change type of map.
struct HybridMapTypeButton: View {
    var locationManager: CurrentLocationManager
    var body: some View {
        Image(systemName: "location.fill")
            .foregroundColor(Color.white)
            .font(.system(size: 30))
    }
}

//Struct generating standard map type button used to center the the map on user's location.
struct StandardLocationButton: View {
    var locationManager: CurrentLocationManager
    var body: some View {
        Image(systemName: "map")
            .foregroundColor(Color(UIColor(named:"SystemImageColor") ?? .white))
            .font(.system(size: 30))
    }
}

//Struct generating standard map type button used to center the the map on user's location.
struct HybridLocationButton: View {
    var locationManager: CurrentLocationManager
    var body: some View {
        Image(systemName: "map.fill")
            .foregroundColor(Color.white)
            .font(.system(size: 30))
    }
}

//Struct contains code responsible for generating button allowing users to download all journey's photos.
struct DownloadGalleryButton: View {
    
    //Variables described in SeeJourneyView struct.
    var journey: SingleJourney
    @Binding var showPicture: Bool
    @Binding var downloadedPhotos: Bool
    
    var body: some View {
        Button{
            for photo in journey.photos.map({return $0.photo}) {
                
                //Each photo is saved to camera roll.
                UIImageWriteToSavedPhotosAlbum(photo, nil, nil, nil)
            }
            withAnimation {
                downloadedPhotos = true
            }
        } label: {
            ButtonView(buttonTitle: "Save all images to camera roll")
        }
        .background(journey.photos.map ({return $0.photo}).contains(UIImage()) ? Color.gray : Color.blue)
        .clipShape(RoundedRectangle(cornerRadius: 10))
        .padding(.horizontal, 5)
        .padding(.top, 5)
        .disabled(journey.photos.map ({return $0.photo}).contains(UIImage()) ? true : false)
        .opacity(showPicture ? 0 : 1)
    }
}




