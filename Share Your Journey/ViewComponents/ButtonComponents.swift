//
//  ButtonComponents.swift
//  Share Your Journey
//
//  Created by Bartosz Klimek on 20/04/2022.
//

import Foundation
import SwiftUI

//Struct generating button in the entire application.
struct ButtonView: View {
    var buttonTitle: String
    var body: some View {
        HStack{
            Spacer()
            Text(buttonTitle)
                .padding(.vertical, 10)
            Spacer()
        }
        .foregroundColor(Color.white)
    }
}

//Four buttons responsible for pausing, re-starting, finishing and quiting journey are generated by this struct.
struct SymbolButtonView: View {
    var buttonImage: String
    var body: some View {
        HStack{
            Spacer()
            Image(systemName: buttonImage)
                .foregroundColor(.white)
                .padding(.vertical, 11)
            Spacer()
        }
        .foregroundColor(Color.white)
    }
}

//Struct generating standard map type button used to change type of map.
struct LocationButton: View {
    var body: some View {
        Image(systemName: "location.fill")
            .font(.system(size: 30))
            .padding(.vertical, 10)
    }
}

//Struct generating standard map type button used to center the the map on user's location.
struct MapTypeButton: View {
    var body: some View {
        Image(systemName: "map")
            .font(.system(size: 30))
            .padding(.vertical, 10)
    }
}

struct ImageButton: View {
    var body: some View {
        Image(systemName: "photo.fill.on.rectangle.fill")
            .font(.system(size: 30))
            .padding(.vertical, 10)
    }
}

//Struct contains code responsible for generating button allowing users to download all journey's photos.
struct DownloadGalleryButton: View {
    
    //Variables described in SeeJourneyView struct.
    var journey: SingleJourney
    @Binding var showDownloadAlert: Bool
    @Binding var showPicture: Bool
    @Binding var subscriber: Bool
    @Binding var showPanel: Bool
    
    var gold: Color {
        Color(uiColor: UIColor(red: 1.00, green: 0.62, blue: 0.00, alpha: 1.00))
    }
    
    var body: some View {
        Button{
            if subscriber {
                showDownloadAlert = true
            } else {
                showPanel = true
            }
        } label: {
            ButtonView(buttonTitle: "Save all images to camera roll")
        }
        .background(subscriber ? (journey.photos.map ({return $0.photo}).contains(UIImage()) ? Color.gray : Color.accentColor) : gold)
        .clipShape(RoundedRectangle(cornerRadius: 10))
        .padding(.horizontal, 5)
        .padding(.top, 5)
        .disabled(journey.photos.map ({return $0.photo}).contains(UIImage()) ? true : false)
        .opacity(showPicture ? 0 : 1)
    }
}




